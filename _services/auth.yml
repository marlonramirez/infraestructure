services:
  auth:
    container_name: srv-auth
    build:
      context: ../auth
    volumes:
      - pub_key:/rsa/pub
      - priv_key:/rsa/priv
    environment:
      - APP_URL=${DOMAIN}
      - DB_HOST=${DB_HOST}
      - DB_DATABASE=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PATH_PRIVATEKEY=${PRIV_KEY}
      - PATH_PUBLICKEY=${PUB_KEY}
      - SMTP_HOST=${MAIL_HOST}
      - SMTP_PORT=${MAIL_PORT}
      - SMTP_AUTH=true
      - SMTP_USER=${MAIL_USER}
      - SMTP_PASSWORD=${MAIL_PASSWORD}
      - AWS_BUCKET=${AWS_BUCKET}
      - AWS_DEFAULT_REGION=${AWS_REGION}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET}
      - AWS_ACCESS_KEY_ID=${AWS_KEY}
      - RECAPTCHA_PULICKEY=${RECAPTCHA_PUB}
      - RECAPTCHA_PRIVATEKEY=${RECAPTCHA_PRIV}
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.auth.rule=Host(`auth.${DOMAIN}`)
      - traefik.http.routers.auth.entrypoints=web

  auth_conf:
    container_name: conf-auth
    build:
      context: ../auth
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_DATABASE=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PATH_PUBLICKEY=${PUB_KEY}
    entrypoint: [php, app/ice, dbup, "--schema={perfiles,[!t]*}"]
    restart: on-failure
volumes:
  pub_key:
  priv_key:
